{"version":3,"sources":["app/reducer.ts","components/bookmark/index.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionKind","BookmarkInput","useState","state","setState","onChange","target","value","Bookmark","label","onDelete","className","onClick","bookmarkReducer","action","type","ADD","payload","DELETE","filter","Addbookmark","handleClick","BookmarkApp","useReducer","storage","window","localStorage","getItem","JSON","parse","initialState","dispatch","add","canAdd","setLabel","handleDelete","current","books","item","setItem","stringify","deleteFromStorage","DeleteAction","prev","stopAdd","length","addToStorage","AddAction","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c26465.chunk.js","sourcesContent":["import { Bookmarks } from \"./App\";\n\nenum ActionKind {\n  ADD = \"ADD\",\n  EDIT = \"EDIT\",\n  DELETE = \"DELETE\",\n}\n\ntype Action = {\n  type: ActionKind;\n  payload: string;\n};\n\nexport const AddAction = (label: string): Action => ({\n  type: ActionKind.ADD,\n  payload: label,\n});\n\nexport const DeleteAction = (label: string): Action => ({\n  type: ActionKind.DELETE,\n  payload: label,\n});\n\nexport default function bookmarkReducer(\n  state: Bookmarks[],\n  action: Action\n): Bookmarks[] {\n  switch (action.type) {\n    case ActionKind.ADD:\n      return [...state, { label: action.payload }];\n    case ActionKind.DELETE:\n      return state.filter(({ label }) => label !== action.payload);\n    default:\n      return state;\n  }\n}\n","import { useState } from \"react\";\n\ninterface BookmarkProps {\n  label: string;\n  onDelete: () => void;\n}\n\nfunction BookmarkInput() {\n  const [state, setState] = useState(\"\");\n  return (\n    <input onChange={({ target }) => setState(target.value)} value={state} />\n  );\n}\n\nexport function Bookmark({ label, onDelete }: BookmarkProps) {\n  return (\n    <>\n      <li>\n        <label className=\"bookmark\">{label}</label>\n        <BookmarkInput />\n        <button className=\"btn-small\" onClick={onDelete}>\n          X\n        </button>\n      </li>\n    </>\n  );\n}\n","import { useState, useReducer } from \"react\";\nimport { Bookmark } from \"../components/bookmark\";\nimport bookmarkReducer, { AddAction, DeleteAction } from \"./reducer\";\nimport \"./App.css\";\n\ninterface AddboomarkProps {\n  handleClick: () => void;\n}\n\nexport type Bookmarks = {\n  label: string;\n};\n\nfunction Addbookmark({ handleClick }: AddboomarkProps) {\n  return <button onClick={handleClick}>+</button>;\n}\n\nfunction initialState() {\n  const storage = window.localStorage.getItem(\"books\");\n  return storage ? JSON.parse(storage) : [];\n}\n\nfunction addToStorage(label: string): void {\n  const storage = window.localStorage;\n  const current = storage.getItem(\"books\");\n  if (current) {\n    const books = JSON.parse(current);\n    storage.setItem(\"books\", JSON.stringify([...books, { label }]));\n  } else {\n    storage.setItem(\"books\", JSON.stringify([{ label }]));\n  }\n}\n\nfunction deleteFromStorage(label: string): void {\n  const storage = window.localStorage;\n  const current = storage.getItem(\"books\");\n  if (current) {\n    const books = JSON.parse(current).filter(\n      (item: Bookmarks) => item.label !== label\n    );\n    storage.setItem(\"books\", JSON.stringify(books));\n  } else {\n    storage.setItem(\"books\", JSON.stringify([{ label }]));\n  }\n}\n\nfunction BookmarkApp() {\n  const [state, dispatch] = useReducer(bookmarkReducer, initialState());\n  const [add, canAdd] = useState<true | false>(false);\n  const [label, setLabel] = useState<string>(\"\");\n\n  function handleClick() {\n    const stopAdd = label !== \"\" && state.length < 5;\n    if (stopAdd) {\n      addToStorage(label);\n      stopAdd && dispatch(AddAction(label));\n    }\n  }\n\n  function handleDelete() {\n    deleteFromStorage(label);\n    dispatch(DeleteAction(label));\n  }\n\n  return (\n    <>\n      <button className=\"btn\" onClick={() => canAdd((prev) => !prev)}>\n        +\n      </button>\n      {add && (\n        <>\n          <input onChange={({ target: { value } }) => setLabel(value)} />\n          <Addbookmark handleClick={handleClick} />\n        </>\n      )}\n      <ul className=\"bookmarks\">\n        {state.map(({ label }: Bookmarks) => (\n          <Bookmark key={label} label={label} onDelete={handleDelete} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Bookmarks</h1>\n        <BookmarkApp />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}