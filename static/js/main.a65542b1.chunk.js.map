{"version":3,"sources":["app/App.style.tsx","components/bookmark/index.style.tsx","app/reducer.ts","components/bookmark/index.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["sizes","ListItem","styled","li","Label","label","Input","input","Wrapper","div","AddGroup","Container","ActionKind","buttonSizes","small","default","Button","button","size","List","ul","storageKey","Bookmark","value","onDelete","useState","state","setState","useEffect","className","onClick","onChange","target","storage","window","localStorage","current","getItem","newValue","JSON","parse","map","book","setItem","stringify","addToStorage","bookmarkReducer","action","type","ADD","payload","DELETE","filter","Addbookmark","handleClick","BookmarkApp","useReducer","initialState","dispatch","setLabel","handleDelete","books","item","deleteFromStorage","DeleteAction","stopAdd","length","AddAction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a65542b1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #282c34;\n  min-height: 100vh;\n  color: white;\n`;\n\nexport const AddGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const Input = styled.input`\n  flex: 1 1 50%;\n  font-size: 24px;\n`;\n\nenum sizes {\n  small = 2,\n  default = 1,\n}\n\ntype size = {\n  [key: string]: number;\n};\n\nconst buttonSizes: size = {\n  small: sizes.small,\n  default: sizes.default,\n};\n\n// come back to this later\nexport const Button = styled.button<any>`\n  font-size: 2rem;\n  flex: 0 1 15%;\n  padding: 0.5rem 1rem;\n  /* font-size: ${({ size }: size) => (size ? buttonSizes[size] : \"2rem\")};\n  padding: ${({ size }: size) => (size ? buttonSizes[size] : \"0.5rem 1rem\")}; */\n  border: 1px solid indianred !important;\n  border-radius: 0.25rem;\n  outline: none;\n  background-color: indianred;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import styled from \"styled-components\";\n\nexport const ListItem = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  padding-bottom: 1rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 32px;\n  flex: 0 1 20%;\n  white-space: nowrap;\n`;\n\nexport const Input = styled.input`\n  flex: 1 1 50%;\n  font-size: 24px;\n`;\n","import { Bookmarks } from \"./App\";\n\nenum ActionKind {\n  ADD = \"ADD\",\n  EDIT = \"EDIT\",\n  DELETE = \"DELETE\",\n}\n\ntype Action = {\n  type: ActionKind;\n  payload: string;\n};\n\nexport const AddAction = (label: string): Action => ({\n  type: ActionKind.ADD,\n  payload: label,\n});\n\nexport const DeleteAction = (label: string): Action => ({\n  type: ActionKind.DELETE,\n  payload: label,\n});\n\nexport default function bookmarkReducer(\n  state: Bookmarks[],\n  action: Action\n): Bookmarks[] {\n  switch (action.type) {\n    case ActionKind.ADD:\n      return [...state, { label: action.payload, value: \"\" }];\n    case ActionKind.DELETE:\n      return state.filter(({ label }) => label !== action.payload);\n    default:\n      return state;\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { ListItem, Label, Input } from \"./index.style\";\nimport { Button } from \"../../app/App.style\";\n\ninterface BookmarkProps {\n  label: string;\n  value: string;\n  onDelete: (x: string) => void;\n}\n\nconst storageKey = \"books\";\n\nfunction addToStorage({\n  label,\n  value,\n}: {\n  label: string;\n  value: string;\n}): void {\n  const storage = window.localStorage;\n  const current = storage.getItem(storageKey);\n  if (current) {\n    const books = JSON.parse(current);\n    const newValue = books.map((book: any) => {\n      if (book.label === label) {\n        book.value = value;\n        return book;\n      } else {\n        return book;\n      }\n    });\n    storage.setItem(storageKey, JSON.stringify(newValue));\n  }\n}\n\nexport function Bookmark({ label, value, onDelete }: BookmarkProps) {\n  const [state, setState] = useState(value);\n\n  useEffect(() => setState(value), [value]);\n\n  return (\n    <>\n      <Label className=\"bookmark\">{label}</Label>\n      <ListItem>\n        <Button className=\"btn-small\" onClick={() => onDelete(label)}>\n          X\n        </Button>\n        <Input\n          onChange={({ target }) => {\n            setState(target.value);\n            addToStorage({ label, value: target.value });\n          }}\n          value={state}\n        />\n      </ListItem>\n    </>\n  );\n}\n","import { useState, useReducer } from \"react\";\nimport { Bookmark } from \"../components/bookmark\";\nimport bookmarkReducer, { AddAction, DeleteAction } from \"./reducer\";\nimport { Wrapper, AddGroup, Container, Button, List, Input } from \"./App.style\";\n\ninterface AddboomarkProps {\n  handleClick: () => void;\n}\n\nexport type Bookmarks = {\n  label: string;\n  value: string;\n};\n\nconst storageKey: string = \"books\";\n\nfunction Addbookmark({ handleClick }: AddboomarkProps) {\n  return <Button onClick={handleClick}>+</Button>;\n}\n\nfunction initialState() {\n  const storage = window.localStorage.getItem(storageKey);\n  return storage ? JSON.parse(storage) : [];\n}\n\nfunction addToStorage(label: string): void {\n  const storage = window.localStorage;\n  const current = storage.getItem(storageKey);\n  if (current) {\n    const books = JSON.parse(current);\n    storage.setItem(\n      storageKey,\n      JSON.stringify([...books, { label, value: \"\" }])\n    );\n  } else {\n    storage.setItem(storageKey, JSON.stringify([{ label, value: \"\" }]));\n  }\n}\n\nfunction deleteFromStorage(label: string): void {\n  const storage = window.localStorage;\n  const current = storage.getItem(storageKey);\n  if (current) {\n    const books = JSON.parse(current).filter(\n      (item: Bookmarks) => item.label !== label\n    );\n    storage.setItem(storageKey, JSON.stringify(books));\n  }\n}\n\nfunction BookmarkApp() {\n  const [state, dispatch] = useReducer(bookmarkReducer, initialState());\n  const [label, setLabel] = useState<string>(\"\");\n\n  function handleClick() {\n    const stopAdd = label !== \"\" && state.length < 5;\n    if (stopAdd) {\n      addToStorage(label);\n      stopAdd && dispatch(AddAction(label));\n    }\n  }\n\n  function handleDelete(value: string) {\n    deleteFromStorage(value);\n    dispatch(DeleteAction(value));\n  }\n\n  return (\n    <>\n      <Container>\n        <List>\n          {state.map(({ label, value }: Bookmarks) => (\n            <Bookmark\n              key={label}\n              label={label}\n              value={value}\n              onDelete={handleDelete}\n            />\n          ))}\n        </List>\n        <AddGroup>\n          <Addbookmark handleClick={handleClick} />\n          <Input onChange={({ target: { value } }) => setLabel(value)} />\n        </AddGroup>\n      </Container>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Wrapper>\n      <h1>Bookmarks</h1>\n      <BookmarkApp />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}