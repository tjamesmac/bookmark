{"version":3,"sources":["components/bookmark/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BookmarkInput","useState","state","setState","onChange","target","value","Bookmark","label","onDelete","className","onClick","ActionKind","Addbookmark","handleClick","increaseAction","type","ADD","payload","decreaseAction","DELETE","initialState","bookmarkReducer","action","Stuff","add","canAdd","bookmarks","setBookmarks","setLabel","useReducer","dispatch","map","prev","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAOA,SAASA,IAAiB,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAEvB,OACE,uBAAOC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBF,EAASE,EAAOC,QAAQA,MAAOJ,IAc7D,SAASK,EAAT,GAAuD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAChC,OACE,mCACE,+BACE,uBAAOC,UAAU,WAAjB,SAA6BF,IAC7B,cAACR,EAAD,IACA,wBAAQW,QAASF,EAAjB,oB,ICTHG,E,MATL,SAASC,EAAT,GAAwD,IAAjCC,EAAgC,EAAhCA,YACrB,OAAO,wBAAQH,QAASG,EAAjB,gB,SAQJF,K,UAAAA,E,YAAAA,E,iBAAAA,M,KAWL,IAAMG,EAAyB,CAC7BC,KAAMJ,EAAWK,IACjBC,QAAS,GAGLC,EAAyB,CAC7BH,KAAMJ,EAAWQ,OACjBF,QAAS,GAELG,EAAsB,CAAEb,MAAO,GACrC,SAASc,EAAgBpB,EAAcqB,GACrC,OAAQA,EAAOP,MACb,KAAKJ,EAAWK,IACd,OAAO,2BACFf,GADL,IAEEM,MAAON,EAAMM,MAAQe,EAAOL,UAEhC,KAAKN,EAAWQ,OACd,OAAO,2BACFlB,GADL,IAEEM,MAAON,EAAMM,MAAQe,EAAOL,UAGhC,QACE,OAAOhB,GAIb,SAASsB,IAAS,IAAD,EACOvB,oBAAS,GADhB,mBACRwB,EADQ,KACHC,EADG,OAEmBzB,mBAAsB,IAFzC,mBAER0B,EAFQ,KAEGC,EAFH,OAGW3B,mBAAS,IAHpB,mBAGRO,EAHQ,KAGDqB,EAHC,OAIWC,qBAAWR,EAAiBD,GAJvC,mBAIRnB,EAJQ,KAID6B,EAJC,KAKf,OACE,qCACE,wCAAW7B,EAAMM,SACjB,wBAAQG,QAAS,kBAAMoB,EAAShB,IAAhC,eACA,wBAAQJ,QAAS,kBAAMoB,EAASZ,IAAhC,eACA,oBAAIT,UAAU,YAAd,SACGiB,EAAUK,KAAI,gBAAGxB,EAAH,EAAGA,MAAH,OACb,cAACD,EAAD,CAEEC,MAAK,UAAKA,GACVC,SAAU,kBACRmB,GAAa,SAACK,GAAD,OACXA,EAAKC,QAAO,qBAAG1B,QAAqCA,UAJnDA,QAWX,cAACK,EAAD,CAAaC,YAAa,kBAAMY,GAAO,SAACO,GAAD,OAAWA,QACjDR,GACC,qCACE,uBAAOrB,SAAU,gBAAaE,EAAb,EAAGD,OAAUC,MAAb,OAA2BuB,EAASvB,MACrD,cAACO,EAAD,CACEC,YAAa,iBACD,KAAVN,GAAgBoB,GAAa,SAACK,GAAD,4BAAcA,GAAd,CAAoB,CAAEzB,uBAmBlD2B,MAVf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACc,EAAD,SCzFOY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e55de51e.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\ninterface BookmarkProps {\n  label: string;\n  onDelete: () => void;\n}\n\nfunction BookmarkInput() {\n  const [state, setState] = useState(\"\");\n  return (\n    <input onChange={({ target }) => setState(target.value)} value={state} />\n  );\n}\n\nfunction usePrevious(value: any) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport function Bookmark({ label, onDelete }: BookmarkProps) {\n  return (\n    <>\n      <li>\n        <label className=\"bookmark\">{label}</label>\n        <BookmarkInput />\n        <button onClick={onDelete}>x</button>\n      </li>\n    </>\n  );\n}\n","import { useState, useReducer } from \"react\";\nimport { Bookmark } from \"./components/bookmark\";\nimport \"./App.css\";\n\ninterface AddboomarkProps {\n  handleClick: () => void;\n}\n\ntype bookmarks = {\n  label: string;\n};\n\nfunction Addbookmark({ handleClick }: AddboomarkProps) {\n  return <button onClick={handleClick}>+</button>;\n}\ntype Reducer<State, Action> = (state: State, action: Action) => State;\n\ntype State = {\n  label: number;\n};\n\nenum ActionKind {\n  ADD = \"ADD\",\n  EDIT = \"EDIT\",\n  DELETE = \"DELETE\",\n}\n\ntype Action = {\n  type: ActionKind;\n  payload: any;\n};\n\nconst increaseAction: Action = {\n  type: ActionKind.ADD,\n  payload: 1,\n};\n\nconst decreaseAction: Action = {\n  type: ActionKind.DELETE,\n  payload: 1,\n};\nconst initialState: State = { label: 0 };\nfunction bookmarkReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionKind.ADD:\n      return {\n        ...state,\n        label: state.label + action.payload,\n      };\n    case ActionKind.DELETE:\n      return {\n        ...state,\n        label: state.label - action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction Stuff() {\n  const [add, canAdd] = useState(false);\n  const [bookmarks, setBookmarks] = useState<bookmarks[]>([]);\n  const [label, setLabel] = useState(\"\");\n  const [state, dispatch] = useReducer(bookmarkReducer, initialState);\n  return (\n    <>\n      <p>Count: {state.label}</p>\n      <button onClick={() => dispatch(increaseAction)}>+</button>\n      <button onClick={() => dispatch(decreaseAction)}>-</button>\n      <ul className=\"bookmarks\">\n        {bookmarks.map(({ label }: any) => (\n          <Bookmark\n            key={label}\n            label={`${label}`}\n            onDelete={() =>\n              setBookmarks((prev) =>\n                prev.filter(({ label: prevLabel }) => prevLabel !== label)\n              )\n            }\n          />\n        ))}\n      </ul>\n\n      <Addbookmark handleClick={() => canAdd((prev) => !prev)} />\n      {add && (\n        <>\n          <input onChange={({ target: { value } }) => setLabel(value)} />\n          <Addbookmark\n            handleClick={() =>\n              label !== \"\" && setBookmarks((prev) => [...prev, { label }])\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Stuff />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}